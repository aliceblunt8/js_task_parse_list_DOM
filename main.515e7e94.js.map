{"version":3,"sources":["scripts/main.js"],"names":["initialList","document","querySelector","employees","children","toNumber","str","replace","sortList","list","sortedList","sort","a","b","dataset","salary","append","getEmployees","map","person","name","innerText"],"mappings":";AAAA,aA0BA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxBA,IAAMA,EAAcC,SAASC,cAAc,MACrCC,EAAgBH,EAAAA,EAAYI,UAElC,SAASC,EAASC,GACTA,OAAAA,EAAIC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAG3C,SAASC,EAASC,GACVC,IAAAA,EAAaD,EAAKE,KAAK,SAACC,EAAGC,GAC/BR,OAAAA,EAASQ,EAAEC,QAAQC,QAAUV,EAASO,EAAEE,QAAQC,UAElDf,EAAYgB,OAAZhB,MAAAA,EAAsBU,EAAAA,IAGxB,SAASO,EAAaR,GACbA,OAAAA,EAAKS,IAAI,SAAAC,GAAM,OAAA,EAAA,CAElBC,KAAMD,EAAOE,WACVF,EAAOL,WAKhBN,EAASL,GACTc,EAAad","file":"main.515e7e94.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst initialList = document.querySelector('ul');\nconst employees = [...initialList.children];\n\nfunction toNumber(str) {\n  return str.replace('$', '').replace(',', '');\n}\n\nfunction sortList(list) {\n  const sortedList = list.sort((a, b) =>\n    toNumber(b.dataset.salary) - toNumber(a.dataset.salary));\n\n  initialList.append(...sortedList);\n}\n\nfunction getEmployees(list) {\n  return list.map(person => (\n    {\n      name: person.innerText,\n      ...person.dataset,\n    }\n  ));\n}\n\nsortList(employees);\ngetEmployees(employees);\n"]}